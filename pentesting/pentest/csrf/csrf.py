import requests
from bs4 import BeautifulSoup


# Function to check for CSRF vulnerability
def check_csrf(url):
    msg = ""
    result = ""
    # Send GET request to get CSRF token
    response = requests.get(url)
    # Parse the response HTML
    soup = BeautifulSoup(response.content, 'html.parser')

    # Find the CSRF token input field
    csrf_input = soup.find('input', {'name': 'csrf_token'})

    # If CSRF token input field is found, extract the token value
    if csrf_input:
        csrf_token = csrf_input['value']
        print("CSRF токен найден:", csrf_token)
        msg = "CSRF токен найден:" + csrf_token
    else:
        print("CSRF токен не найден на странице:", url)
        msg = "CSRF токен найден:" + url

    # Send a POST request with a forged CSRF attack
    forged_data = {'username': 'hacker', 'password': 'password', 'csrf_token': 'attacker_token'}
    response = requests.post(url, data=forged_data)

    # Check if the forged request was successful
    if response.status_code == 200:
        # If there is an error message, the CSRF attack failed
        if "error" in response.text.lower():
            print("Защита от CSRF работает. Атака не удалась.")
            result = "Защита от CSRF работает. Атака не удалась."
        else:
            print("Уязвимость CSRF обнаружена. Атака удалась.")
            result = "Уязвимость CSRF обнаружена. Атака удалась."
    else:
        print("Не удалось отправить поддельный запрос.")
        result = "Не удалось отправить поддельный запрос."

    return {
        "name": msg,
        "result": result
    }
